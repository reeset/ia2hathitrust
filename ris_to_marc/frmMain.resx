<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label1.Text" xml:space="preserve">
    <value>This plugin provides and automated method for harvesting data via the Internet Archive and packing it for HathiTrust ingest.  The plugin makes one assumption, that institutions have provided Internet Archive with copies of their MARC records.
</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="cmdSave.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAB7
        BQAAewUBcRRwMgAAAAd0SU1FB9cGCA80AU5q3yQAAAEMSURBVDhPYxg84MxM4//IGCyYxvAfK0YHIA3o
        AGwIUDHvAnYUjGEAQvNMNPwfrFhtrQgKxm7A94n//3/pg2OwIih22KmAgpHlEAa8bv3//1nD/6OTdMAY
        JEYMBhsA0gDTjAw87zD8L/7vgRWD5I5Nk/g/pVLzP8SAqzlgE9HDAaRw9f8+FAwSA8nBDTjUrwkM8jSE
        Ad+B4QHDaIaA2O/3hKEacKBXHWwAxAtAA0DhgYZBGsE2A9nPNvuiGrCvWxVsAJgGGQAMDzgGiqPjOyud
        UQ3Y1a4IltjRKg8xABgecIymGYQvL7BCNQDEAEmAaXQDsOBr6wxRDQCBtW0SYAFSMdwAEABxSMUMDAwM
        ACIQLlu10G32AAAAAElFTkSuQmCC
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="cmd_setcustom.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAewgAAHsIAXgkHaEAAAAHdElNRQfXBggPLTpkYZ8YAAABPUlEQVQ4T2MYPODMTOP/
        p2cY/T85zeD/8Sl6/6HCxAGQZnRwqF+TOEMQmmei4f//93ap/N/Vrvh/e4vc/61NMv83N0j931Arjmow
        yNn/v0/8//9LHybGAtZVi/5PS0tDGALy8//Xrf//P2v4f3SSDlZ8oFf9/55O5f87WuX/b2mUBrsEhMEG
        gALs/4MqsEKiANAiEFhcwAVxCVjjlbz/kLBADwdM/ONoPJhekMsOMQAU2v/PpIGjEKwIFB548Ps9YWB1
        87JZIQaA/AcyAOIFoAGg8MCDn232Baubk8kMMQAUVSAD9veoQQwAhgc+fGelM1jdrHRGiAGgeAYZAAph
        sAHA8MCHLy+wAqubmcYAMQAEkBMJKJ5XVwj9X1HK/39pEQ84tEEBBvIzyNkgm2Ga4QaAAEyAFAzVSglg
        YAAAcK4KnXONETkAAAAASUVORK5CYII=
</value>
  </data>
</root>